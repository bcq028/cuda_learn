# this is the build file for project 
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(cuda_learn LANGUAGES CUDA)

# target
add_executable(cuda_learn "")
set_target_properties(cuda_learn PROPERTIES OUTPUT_NAME "cuda_learn")
set_target_properties(cuda_learn PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
target_include_directories(cuda_learn PRIVATE
    "C:/Program\\ Files/NVIDIA\\ GPU\\ Computing\\ Toolkit/CUDA/v12.4/include"
)
target_compile_options(cuda_learn PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CUDA>:-m64>
    $<$<COMPILE_LANGUAGE:CUDA>:-rdc=true>
    $<$<COMPILE_LANGUAGE:CUDA>:-gencode arch=compute_89,code=sm_89>
    $<$<COMPILE_LANGUAGE:CUDA>:-gencode arch=compute_89,code=compute_89>
)
if(MSVC)
    target_compile_options(cuda_learn PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(cuda_learn PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(cuda_learn PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET cuda_learn PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(cuda_learn PRIVATE
    cudadevrt
    cudart_static
)
target_link_directories(cuda_learn PRIVATE
    "C:/Program\\ Files/NVIDIA\\ GPU\\ Computing\\ Toolkit/CUDA/v12.4/lib/x64"
)
target_sources(cuda_learn PRIVATE
    src/main.cu
)
set_target_properties(cuda_learn PROPERTIES CUDA_SEPARABLE_COMPILATION ON)

